# .github/workflows/main.yml

name: CI/CD Pipeline with Bandit SAST

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Job 1. Build: Tidak ada perubahan
  build:
    name: 1. Build Image Locally
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./src
          push: false
          load: true
          tags: local-app:latest

  # Job 2. Unit Test: Tidak ada perubahan
  unit-test:
    name: 2. Unit Testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt
          pip install pytest
      - name: Run unit tests with pytest
        run: pytest src/tests/

  # Job 3. SAST: Disederhanakan, hanya menggunakan Bandit
  sast-scan:
    name: 3. SAST Security Scanning (Bandit)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Run Bandit Scan
        run: |
          pip install bandit
          # Membuat file laporan bernama bandit-report.json
          bandit -r src/ -ll -ii -f json -o bandit-report.json
        # continue-on-error agar job upload artifact tetap berjalan
        continue-on-error: true

      - name: Upload Bandit report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: bandit-sast-report
          path: bandit-report.json
      
      # LANGKAH SONARCLOUD DIHAPUS DARI SINI

  # Job 4. DAST: Tidak ada perubahan
  dast-scan:
    name: 4. DAST Security Scanning
    runs-on: ubuntu-latest
    needs: [build, unit-test, sast-scan]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run application using Docker Compose
        run: docker-compose up -d
      - name: Wait for application
        run: sleep 30
      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.10.0
        with:
          target: 'http://localhost:1337/'

  # Job 5. Deployment: Tidak ada perubahan
  deploy-to-staging:
    name: 5. Deploy to Staging via Source Code
    runs-on: ubuntu-latest
    needs: dast-scan
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Copy source code to staging server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USERNAME }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          source: "."
          target: "/home/${{ secrets.STAGING_USERNAME }}/tubdevsec"
      - name: Build and run on staging server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USERNAME }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          script: |
            cd /home/${{ secrets.STAGING_USERNAME }}/tubdevsec
            docker-compose build --no-cache
            docker-compose up -d --force-recreate
